// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;

///<<< BEGIN WRITING YOUR CODE FILE_INIT

///<<< END WRITING YOUR CODE

public class PW_BaseAgent : behaviac.Agent
///<<< BEGIN WRITING YOUR CODE PW_BaseAgent
///<<< END WRITING YOUR CODE
{
	public void LogTest(string messsage)
	{
///<<< BEGIN WRITING YOUR CODE LogTest
        behaviac.Debug.Log(messsage);
        ///<<< END WRITING YOUR CODE
	}

///<<< BEGIN WRITING YOUR CODE CLASS_PART

    [UnityEngine.SerializeField,UnityEngine.Space(20),UnityEngine.Tooltip("行为树名称")] private string bt_name;
    public string BT_Name
    {
        get
        {
            return bt_name;
        }
        set
        {
            bt_name = value;
            InitBehavic();
            InitPlayer();
        }
    }

    private static string ExportedFilePath
    {
        get
        {
            string relativePath = "/Resources/behaviac/exported";
            return "Assets" + relativePath;
        }
    }

    private bool InitBehavic()
    {
        behaviac.Debug.LogWarning("InitBehavic");

        behaviac.Workspace.Instance.FilePath = ExportedFilePath;
        behaviac.Workspace.Instance.FileFormat = behaviac.Workspace.EFileFormat.EFF_xml;

        return true;
    }

    private bool InitPlayer()
    {
        behaviac.Debug.LogWarning("InitPlayer");

        if (BT_Name != string.Empty)
        {
            bool bRet = this.btload(BT_Name);
            if (bRet)
            {
                this.btsetcurrent(BT_Name);
            }
            else
            {
                behaviac.Debug.Log("Can not find the BT!");
            }

            return bRet;
        }
        else
        {
            behaviac.Debug.Log("The BT_Name is empty!");
        }
        return false;

    }

    private void Awake()
    {
        InitBehavic();
        InitPlayer();
    }

    behaviac.EBTStatus _status = behaviac.EBTStatus.BT_RUNNING;
    void Update()
    {
        if (_status == behaviac.EBTStatus.BT_RUNNING)
        {
            behaviac.Debug.LogWarning("Update");

            _status = this.btexec();
        }
    }
    ///<<< END WRITING YOUR CODE

}

///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE

